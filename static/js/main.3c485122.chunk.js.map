{"version":3,"sources":["api.js","Components/Footer.js","Components/Header.js","Components/OpinionStep.js","Components/VoteStep.js","Components/SummaryStep.js","Components/Retro.js","Components/utils.js","Components/Admin.js","actions.js","Components/LoginPage.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["BASE_URL","process","events","EventSource","isRealTimeUpdateRunning","api","startRealTimeUpdate","callbackFunction","onmessage","event","parsedData","JSON","parse","data","stopRealTimeUpdate","close","getRetros","url","axios","get","result","retros","getRetro","id","submitRetroOpinions","opinions","post","response","status","submitVotesOnOpinion","votedOpinions","addRetro","deleteRetro","delete","Footer","children","Container","style","margin","padding","background","border","borderRadius","color","fontStyle","textAlign","width","Header","pageTitle","history","useHistory","paddingBottom","Grid","Row","as","inverted","textTransform","cursor","onClick","push","centered","Column","verticalAlign","borderBottom","OpinionStep","props","location","useLocation","retroId","queryString","search","useState","_id","uuid","description","isPositive","example","setOpinions","currentIsPositive","setCurrentIsPositive","newOpinion","setNewOpinion","setCurrentRetro","isConfirmOpen","setIsConfirmOpen","isWaitingForResponse","setIsWaitingForResponse","inputError","setInputError","useEffect","a","fetchData","onCurrentIconClick","saveOpinions","arrayWithoutExamples","filter","item","onConfirmOkayClick","isSuccess","finishedAddingAction","toast","type","Fragment","Input","onChange","target","value","error","label","borderColor","Button","circular","size","marginLeft","icon","floated","labelPosition","Icon","name","Divider","horizontal","section","List","map","opinion","key","columns","newArray","deleteOpinion","loading","Confirm","open","onCancel","onConfirm","content","VoteStep","opinionsWithVotes","setOpinionsWithVotes","realTimeRetro","useSelector","state","find","retro","fetchOpinions","Object","keys","length","newRealTimeOpinionsIds","oldOpinionIds","some","newId","includes","currentRetro","newOpinions","newStates","forEach","upVoted","votedOpinionIds","entries","paddingTop","Popup","trigger","SummaryStep","sortedGoodOpinions","setSortedGoodOpinions","sortedBadOpinions","setSortedBadOpinions","fetchVotedOpinions","setOpinionsSorted","onlyGood","onlyBad","sortedGood","sort","opinionA","opinionB","votes","sortedBad","Label","Retro","opinionStepVisibility","setOpinionStepVisibility","voteStepVisibility","setVoteStepVisibility","summaryStepVisibility","setSummaryStepVisibility","onNextStepClick","stepNumber","utils","truncate","str","truncateTo","substring","Admin","setRetros","newRetroName","setNewRetroName","e","stopPropagation","placeholder","retroName","fluid","paddingLeft","Loader","inline","active","mouseEnterDelay","Card","Content","display","justifyContent","alignContent","flexDirection","height","overflow","corner","util","payload","LoginPage","isLoading","setIsLoading","dispatch","useDispatch","fetchRetros","actions","Placeholder","marginTop","Array","i","Line","App","authenticated","updateRetros","className","exact","path","position","Boolean","window","hostname","match","retroReducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3c485122.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASE_URL = process.env.REACT_APP_API_URI;\r\nconst events = new EventSource(`${BASE_URL}/api/events`);\r\nlet isRealTimeUpdateRunning = false;\r\n\r\nconst api = {\r\n  startRealTimeUpdate(callbackFunction) {\r\n    if (!isRealTimeUpdateRunning) {\r\n      events.onmessage = (event) => {\r\n        const parsedData = JSON.parse(event.data);\r\n        callbackFunction(parsedData);\r\n      };\r\n      isRealTimeUpdateRunning = true;\r\n    }\r\n  },\r\n\r\n  stopRealTimeUpdate() {\r\n    events.close();\r\n    isRealTimeUpdateRunning = false;\r\n  },\r\n\r\n  async getRetros() {\r\n    let url = `${BASE_URL}/api/retros`;\r\n    let retros;\r\n    try {\r\n      const result = await axios.get(url);\r\n      retros = result.data;\r\n    } catch (error) {\r\n      // nothing needed here.\r\n    }\r\n    return retros;\r\n  },\r\n\r\n  async getRetro(id) {\r\n    let url = `${BASE_URL}/api/retro/${id}`;\r\n    let result;\r\n    try {\r\n      result = await axios.get(url);\r\n    } catch (error) {}\r\n    return result.data;\r\n  },\r\n\r\n  async submitRetroOpinions(id, opinions) {\r\n    let url = `${BASE_URL}/api/retro/opinions/${id}`;\r\n\r\n    const response = await axios.post(url, { opinions });\r\n    return response.status === 200;\r\n  },\r\n\r\n  async submitVotesOnOpinion(id, votedOpinions) {\r\n    let url = `${BASE_URL}/api/retro/opinions/votes/${id}`;\r\n\r\n    const response = await axios.post(url, { votedOpinions });\r\n    return response.status === 200;\r\n  },\r\n\r\n  async addRetro(id) {\r\n    let url = `${BASE_URL}/api/retro/${id}`;\r\n    let response;\r\n    try {\r\n      response = await axios.post(url);\r\n      return response.status === 200;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  async deleteRetro(id) {\r\n    let url = `${BASE_URL}/api/retro/${id}`;\r\n    let response;\r\n    try {\r\n      response = await axios.delete(url);\r\n      return response.status === 200;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nconst Footer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      style={{\r\n        margin: \"15px\",\r\n        padding: \"15px\",\r\n        background: \"#7761F1\",\r\n        border: \"7px solid #7761F1\",\r\n        borderRadius: \"20px 20px 0px 0px\",\r\n        color: \"#C8C7D1\",\r\n        fontStyle: \"italic\",\r\n        textAlign: \"center\",\r\n        width: \"500px\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Grid, Container, Header as SemanticHeader } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = ({ pageTitle }) => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        width: \"500px\",\r\n        margin: \"15px\",\r\n        padding: \"15px\",\r\n        background: \"#7761F1\",\r\n        color: \"white\",\r\n        border: \"7px solid #7761F1\",\r\n        borderRadius: \"0px 0px 50px 50px\",\r\n        paddingBottom: \"30px\",\r\n      }}\r\n    >\r\n      <Grid>\r\n        <Grid.Row>\r\n          <SemanticHeader\r\n            as=\"h1\"\r\n            inverted\r\n            style={{\r\n              padding: \"5px 0px 0px 15px\",\r\n              textTransform: \"uppercase\",\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={()=> history.push(`/`)}\r\n          >\r\n            Retro app\r\n          </SemanticHeader>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <Grid centered>\r\n        <Grid.Column verticalAlign=\"middle\" style={{ padding: \"0px\" }}>\r\n          <SemanticHeader\r\n            as=\"h4\"\r\n            inverted\r\n            style={{\r\n              borderBottom: \"1px solid\",\r\n              width: \"50%\",\r\n              margin: \"auto\",\r\n              textTransform: \"uppercase\",\r\n            }}\r\n          >\r\n            {pageTitle}\r\n          </SemanticHeader>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Container, Divider, Grid, Input, Button, List, Icon, Confirm } from \"semantic-ui-react\";\r\nimport api from \"../api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { toast } from \"react-toastify\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\nconst OpinionStep = (props) => {\r\n  // States\r\n  let location = useLocation();\r\n  const retroId = queryString.parse(location.search);\r\n\r\n  const [opinions, setOpinions] = useState([\r\n    {\r\n      _id: uuid(),\r\n      description: \"Example Positive Feedback\",\r\n      isPositive: true,\r\n      example: true,\r\n    },\r\n    {\r\n      _id: uuid(),\r\n      description: \"Example Negative Feedback\",\r\n      isPositive: false,\r\n      example: true,\r\n    },\r\n  ]);\r\n\r\n  const [currentIsPositive, setCurrentIsPositive] = useState(\"default\");\r\n  const [newOpinion, setNewOpinion] = useState(\"\");\r\n  const [currentRetro, setCurrentRetro] = useState(\"\");\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\r\n  const [inputError, setInputError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.getRetro(retroId._id);\r\n      setCurrentRetro(response);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Functions\r\n  const onCurrentIconClick = () => {\r\n    switch (currentIsPositive) {\r\n      case \"default\":\r\n        setCurrentIsPositive(true);\r\n        break;\r\n      case true:\r\n        setCurrentIsPositive(false);\r\n        break;\r\n      case false:\r\n        setCurrentIsPositive(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const addOpinion = () => {\r\n    if (!newOpinion) {\r\n      toast(\"Enter something first.\", { type: \"info\" });\r\n      setInputError(true);\r\n      return;\r\n    }\r\n    if (currentIsPositive === \"default\") {\r\n      toast(\"Choose an intention.\", { type: \"info\" });\r\n      return;\r\n    }\r\n\r\n    setOpinions([...opinions, { _id: uuid(), description: newOpinion, isPositive: currentIsPositive }]);\r\n  };\r\n\r\n  const deleteOpinion = (id) => {\r\n    const newArray = opinions.filter((opinion) => {\r\n      return opinion._id !== id;\r\n    });\r\n    setOpinions([...newArray]);\r\n  };\r\n\r\n  const saveOpinions = async () => {\r\n    const arrayWithoutExamples = opinions.filter((item) => !item.example);\r\n    return arrayWithoutExamples ? await api.submitRetroOpinions(retroId._id, arrayWithoutExamples) : null;\r\n  };\r\n\r\n  const onOpinionInputChange = (event) => {\r\n    if (inputError) setInputError(false);\r\n    setNewOpinion(event.target.value);\r\n  };\r\n\r\n  const onNextStepClick = () => {\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  const onConfirmCancelClick = () => {\r\n    setIsConfirmOpen(false);\r\n  };\r\n\r\n  const onConfirmOkayClick = async () => {\r\n    setIsConfirmOpen(false);\r\n    setIsWaitingForResponse(true);\r\n    const isSuccess = await saveOpinions();\r\n    setIsWaitingForResponse(false);\r\n    if (isSuccess) {\r\n      props.finishedAddingAction(1);\r\n    } else {\r\n      toast(\"Something went wrong saving your opinions. Please try again.\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header pageTitle={\"Your opinions\"}></Header>\r\n      <Container style={{ width: \"500px\" }}>\r\n        <Grid>\r\n          <Grid.Column>\r\n            <Grid.Row style={{ padding: \"20px 0px 30px 0px\" }}>\r\n              <Input\r\n                onChange={onOpinionInputChange}\r\n                error={inputError}\r\n                label={\r\n                  <span\r\n                    style={{\r\n                      border: \"2px solid\",\r\n                      borderRadius: \"15px 0px 0px 15px\",\r\n                      borderColor: \"#7761F1\",\r\n                      padding: \"8px\",\r\n                    }}\r\n                  >\r\n                    Write your opinion:\r\n                  </span>\r\n                }\r\n                style={{ width: \"100%\" }}\r\n              ></Input>\r\n            </Grid.Row>\r\n            <Grid.Row style={{ paddingBottom: \"10px\" }}>\r\n              {\"Choose intention: \"}\r\n              {currentIsPositive === \"default\" ? (\r\n                <Button circular size=\"tiny\" style={{ marginLeft: \"10px\" }} onClick={onCurrentIconClick}>\r\n                  Choose\r\n                </Button>\r\n              ) : currentIsPositive ? (\r\n                <Button circular icon=\"plus\" size=\"tiny\" style={{ marginLeft: \"10px\" }} color=\"green\" onClick={onCurrentIconClick}></Button>\r\n              ) : (\r\n                <Button circular icon=\"minus\" size=\"tiny\" style={{ marginLeft: \"10px\" }} color=\"red\" onClick={onCurrentIconClick}></Button>\r\n              )}\r\n              <Button floated=\"right\" icon size=\"tiny\" color=\"teal\" circular labelPosition=\"right\" onClick={addOpinion}>\r\n                <Icon name=\"plus\" />\r\n                Add opinion\r\n              </Button>\r\n            </Grid.Row>\r\n            <Grid.Row></Grid.Row>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Divider horizontal section><Icon name=\"down arrow\" /></Divider>\r\n        <List>\r\n          {opinions.map((opinion) => {\r\n            return (\r\n              <Grid key={opinion._id}>\r\n                <Grid.Row style={{ padding: '5px 0px 15px 0px' }} columns=\"2\">\r\n                  <Grid.Column width='13' floated=\"left\" textAlign='left'>\r\n                    {opinion.isPositive ? <Icon name=\"plus\" color=\"green\" /> : <Icon name=\"minus\" color=\"red\" />}\r\n                    {opinion.description}\r\n                  </Grid.Column>\r\n                  <Grid.Column width='3' floated=\"right\" textAlign='right'>\r\n                    <Button color=\"red\" inverted size=\"mini\" icon=\"trash\" circular size='medium' onClick={() => deleteOpinion(opinion._id)}></Button>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </List>\r\n      </Container>\r\n      <Footer>\r\n        <Button size=\"small\" circular color=\"teal\" icon labelPosition=\"right\" onClick={onNextStepClick} loading={isWaitingForResponse}>\r\n          Submit opinions\r\n          <Icon name=\"right arrow\" />\r\n        </Button>\r\n        <Confirm\r\n          open={isConfirmOpen}\r\n          onCancel={onConfirmCancelClick}\r\n          onConfirm={onConfirmOkayClick}\r\n          content=\"Are you sure you want to submit your opinion? There is no return.\"\r\n        />\r\n      </Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpinionStep;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Button, Icon, Confirm, Grid, Popup } from \"semantic-ui-react\";\r\nimport queryString from \"query-string\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport const VoteStep = (props) => {\r\n  const [opinionsWithVotes, setOpinionsWithVotes] = useState({});\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\r\n  const [retroId, setRetroId] = useState(queryString.parse(useLocation().search)._id);\r\n\r\n  let realTimeRetro = useSelector((state) => state.find((retro) => retro._id === retroId));\r\n\r\n  useEffect(() => {\r\n    fetchOpinions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (realTimeRetro && Object.keys(opinionsWithVotes).length > 0) {\r\n      const newRealTimeOpinionsIds = realTimeRetro.opinions.map((opinion) => opinion._id);\r\n      const oldOpinionIds = Object.keys(opinionsWithVotes);\r\n      const isThereNew = newRealTimeOpinionsIds.some((newId) => !oldOpinionIds.includes(newId));\r\n      if (isThereNew) {\r\n        toast(\"New opinions have came in. Press refresh to see them.\", { type: \"info\" });\r\n      } // don't want to auto-update opinions on purpose. Let user do it.\r\n    }\r\n  }, [realTimeRetro]);\r\n\r\n  const fetchOpinions = async () => {\r\n    setIsWaitingForResponse(true);\r\n    const currentRetro = await api.getRetro(retroId);\r\n    setIsWaitingForResponse(false);\r\n    const newOpinions = currentRetro.opinions.filter((opinion) => !Object.keys(opinionsWithVotes).includes(opinion._id));\r\n\r\n    let newStates = {};\r\n    newOpinions.forEach((opinion) => {\r\n      newStates = {\r\n        ...newStates,\r\n        [opinion._id]: {\r\n          description: opinion.description,\r\n          isPositive: opinion.isPositive,\r\n          upVoted: false,\r\n        },\r\n      };\r\n    });\r\n    setOpinionsWithVotes({ ...opinionsWithVotes, ...newStates });\r\n  };\r\n\r\n  const voteUpOpinion = (id) => {\r\n    setOpinionsWithVotes({\r\n      ...opinionsWithVotes,\r\n      [id]: {\r\n        ...opinionsWithVotes[id],\r\n        upVoted: !opinionsWithVotes[id].upVoted,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onNextStepClick = () => {\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  const onConfirmCancelClick = () => {\r\n    setIsConfirmOpen(false);\r\n  };\r\n\r\n  const onConfirmOkayClick = async () => {\r\n    setIsConfirmOpen(false);\r\n    setIsWaitingForResponse(true);\r\n\r\n    const votedOpinionIds = Object.entries(opinionsWithVotes)\r\n      .map((opinion) => {\r\n        return opinion[1].upVoted ? opinion[0] : null;\r\n      })\r\n      .filter((item) => item !== null);\r\n\r\n    const isSuccess = await api.submitVotesOnOpinion(retroId, votedOpinionIds);\r\n    setIsWaitingForResponse(false);\r\n    if (isSuccess) {\r\n      props.finishedAddingAction(2);\r\n    } else {\r\n      toast(\"Something went wrong saving your votes. Please try again.\", { type: \"error\" });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Header pageTitle={\"Vote on opinions\"}></Header>\r\n      <Container style={{ width: \"500px\", padding: \"20px 0px\" }}>\r\n        {Object.entries(opinionsWithVotes).map((opinion) => {\r\n          return (\r\n            <Grid key={opinion._id}>\r\n              <Grid.Row style={{ padding: \"5px 0px 15px 0px\" }} columns=\"2\">\r\n                <Grid.Column width=\"13\" floated=\"left\" textAlign=\"left\">\r\n                  {opinion[1].isPositive ? <Icon name=\"plus\" color=\"green\" /> : <Icon name=\"minus\" color=\"red\" />}\r\n                  {opinion[1].description}\r\n                </Grid.Column>\r\n                <Grid.Column width=\"3\" floated=\"right\" textAlign=\"right\">\r\n                  <Button\r\n                    size=\"medium\"\r\n                    icon=\"up arrow\"\r\n                    color={opinionsWithVotes[opinion[0]].upVoted ? \"green\" : \"grey\"}\r\n                    circular\r\n                    onClick={() => voteUpOpinion(opinion[0])}\r\n                  ></Button>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Container>\r\n      <Footer style={{ paddingTop: \"30px\" }}>\r\n        <Grid>\r\n          <Grid.Row columns=\"2\">\r\n            <Grid.Column>\r\n                <Button floated=\"left\" circular size=\"small\" color=\"teal\" onClick={fetchOpinions} icon name=\"refresh\" loading={isWaitingForResponse}>\r\n                  <Popup trigger={<Icon name=\"refresh\" />} content=\"Manually refresh opinions\"></Popup>\r\n                </Button>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                floated=\"right\"\r\n                circular\r\n                size=\"small\"\r\n                color=\"teal\"\r\n                icon\r\n                labelPosition=\"right\"\r\n                onClick={onNextStepClick}\r\n                loading={isWaitingForResponse}\r\n              >\r\n                See Summary\r\n                <Icon name=\"right arrow\" />\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Confirm\r\n          open={isConfirmOpen}\r\n          onCancel={onConfirmCancelClick}\r\n          onConfirm={onConfirmOkayClick}\r\n          content=\"Are you sure you want to submit your votes? There is no return.\"\r\n        />\r\n      </Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoteStep;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Divider, List, Icon, Label, Grid } from \"semantic-ui-react\";\r\nimport queryString from \"query-string\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst SummaryStep = (props) => {\r\n  const [sortedGoodOpinions, setSortedGoodOpinions] = useState([]);\r\n  const [sortedBadOpinions, setSortedBadOpinions] = useState([]);\r\n  const [retroId, setRetroId] = useState(queryString.parse(useLocation().search)._id);\r\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\r\n\r\n  let retro = useSelector((state) => state.find((retro) => retro._id === retroId));\r\n\r\n  useEffect(() => {\r\n    fetchVotedOpinions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpinionsSorted(retro.opinions);\r\n  }, [retro]);\r\n\r\n  const fetchVotedOpinions = async () => {\r\n    setIsWaitingForResponse(true);\r\n    const { opinions } = await api.getRetro(retroId);\r\n    setIsWaitingForResponse(false);\r\n    setOpinionsSorted(opinions);\r\n  };\r\n\r\n  const setOpinionsSorted = (opinions) => {\r\n    if (opinions) {\r\n      const onlyGood = opinions.filter((opinion) => opinion.isPositive);\r\n      const onlyBad = opinions.filter((opinion) => !opinion.isPositive);\r\n      const sortedGood = onlyGood.sort((opinionA, opinionB) => opinionB.votes - opinionA.votes);\r\n      const sortedBad = onlyBad.sort((opinionA, opinionB) => opinionB.votes - opinionA.votes);\r\n      setSortedGoodOpinions(sortedGood);\r\n      setSortedBadOpinions(sortedBad);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header pageTitle={\"Summary\"}></Header>\r\n      <Container style={{ width: \"500px\", padding: \"20px 0px\" }}>\r\n        {sortedGoodOpinions.map((opinion) => {\r\n          return (\r\n            <Grid key={opinion._id}>\r\n              <Grid.Row style={{ padding: \"5px 0px 15px 0px\" }} columns=\"2\">\r\n                <Grid.Column width=\"13\" floated=\"left\" textAlign=\"left\">\r\n                  {opinion.isPositive ? <Icon name=\"plus\" color=\"green\" /> : <Icon name=\"minus\" color=\"red\" />}\r\n                  {opinion.description}\r\n                </Grid.Column>\r\n                <Grid.Column width=\"3\" floated=\"right\" textAlign=\"right\">\r\n                  <Label color='teal'>{opinion.votes}</Label>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          );\r\n        })}\r\n        <Divider />\r\n        <List>\r\n          {sortedBadOpinions.map((opinion) => {\r\n            return (\r\n              <Grid key={opinion._id}>\r\n                <Grid.Row style={{ padding: \"5px 0px 15px 0px\" }} columns=\"2\">\r\n                  <Grid.Column width=\"13\" floated=\"left\" textAlign=\"left\">\r\n                    {opinion.isPositive ? <Icon name=\"plus\" color=\"green\" /> : <Icon name=\"minus\" color=\"red\" />}\r\n                    {opinion.description}\r\n                  </Grid.Column>\r\n                  <Grid.Column width=\"3\" floated=\"right\" textAlign=\"right\">\r\n                    <Label color='teal'>{opinion.votes}</Label>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </List>\r\n      </Container>\r\n      <Footer style={{ paddingTop: \"30px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryStep;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb, Container, Divider, Grid } from \"semantic-ui-react\";\r\nimport OpinionStep from \"./OpinionStep\";\r\nimport VoteStep from \"./VoteStep\";\r\nimport SummaryStep from \"./SummaryStep\";\r\n\r\nconst Retro = () => {\r\n  const [opinionStepVisibility, setOpinionStepVisibility] = useState(true);\r\n  const [voteStepVisibility, setVoteStepVisibility] = useState(false);\r\n  const [summaryStepVisibility, setSummaryStepVisibility] = useState(false);\r\n\r\n  const onNextStepClick = (stepNumber) => {\r\n    switch (stepNumber) {\r\n      case 1:\r\n        setOpinionStepVisibility(false);\r\n        setVoteStepVisibility(true);\r\n        break;\r\n      case 2:\r\n        setVoteStepVisibility(false);\r\n        setSummaryStepVisibility(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {opinionStepVisibility && <OpinionStep finishedAddingAction={onNextStepClick} />}\r\n      {voteStepVisibility && <VoteStep finishedAddingAction={onNextStepClick}></VoteStep>}\r\n      {summaryStepVisibility && <SummaryStep></SummaryStep>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Retro;\r\n","const utils = {\r\n  truncate: function(str, truncateTo) {\r\n    return str.length > truncateTo ? str.substring(0, truncateTo-3) + \"...\" : str;\r\n  } \r\n}\r\n\r\nexport default utils;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Input, Divider, Card, Grid, Loader, Popup, Label } from \"semantic-ui-react\";\r\nimport api from \"../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport util from \"./utils\";\r\n\r\nconst Admin = () => {\r\n  const [retros, setRetros] = useState([]);\r\n  const [newRetroName, setNewRetroName] = useState(\"\");\r\n  const [inputError, setInputError] = useState(false);\r\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.getRetros();\r\n      if (!response) {\r\n        toast(\"Could not read retros from server. Something is wrong!\", { type: \"error\" });\r\n      } else {\r\n        setRetros(response);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addRetro = async () => {\r\n    setIsWaitingForResponse(true);\r\n    if (newRetroName && !inputError) {\r\n      if (!retros.find((retro) => retro._id === newRetroName)) {\r\n        const result = await api.addRetro(newRetroName);\r\n        if (!result) {\r\n          toast(\"Something went wrong while adding new retro, please try again!\", { type: \"error\" });\r\n        } else {\r\n          const response = await api.getRetros();\r\n          setRetros(response);\r\n        }\r\n      } else {\r\n        toast(\"Please enter a unique retro name.\", { type: \"info\" });\r\n        setInputError(true);\r\n      }\r\n    } else {\r\n      toast(\"Make sure retro name is valid\", { type: \"warning\" });\r\n      setInputError(true);\r\n    }\r\n    setIsWaitingForResponse(false);\r\n  };\r\n\r\n  const deleteRetro = async (e, retroId) => {\r\n    e.stopPropagation();\r\n    if (!isWaitingForResponse) {\r\n      setIsWaitingForResponse(true);\r\n      const result = await api.deleteRetro(retroId);\r\n      if (!result) {\r\n        toast(\"Something went wrong while deleting retro, please try again!\", { type: \"error\" });\r\n      } else {\r\n        const response = await api.getRetros();\r\n        setRetros(response);\r\n      }\r\n      setIsWaitingForResponse(false);\r\n    } else {\r\n      toast(\"Operation is in progress, please wait.\", { type: \"info\" });\r\n    }\r\n  };\r\n\r\n  const onRetroNameChange = (event) => {\r\n    const retroName = event.target.value;\r\n    setInputError(false);\r\n\r\n    if (retroName.length > 20) {\r\n      setInputError(true);\r\n    }\r\n\r\n    if (retros.find((retro) => retro._id === retroName)) {\r\n      setInputError(true);\r\n    }\r\n\r\n    if (retroName.includes(\"/\") || retroName.includes(\"?\")) {\r\n      setInputError(true);\r\n    }\r\n\r\n    setNewRetroName(retroName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header pageTitle={\"Retro management\"}></Header>\r\n      <Container style={{ width: \"500px\", margin: \"15px\", padding: \"15px\" }}>\r\n        <Grid columns=\"1\">\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Input\r\n                placeholder={\"unique retro name\"}\r\n                onChange={onRetroNameChange}\r\n                error={inputError}\r\n                label={\r\n                  <span\r\n                    style={{\r\n                      border: \"2px solid\",\r\n                      borderRadius: \"0px 15px 15px 0px\",\r\n                      borderColor: \"#7761F1\",\r\n                      background: \"#7761F1\",\r\n                      padding: \"8px\",\r\n                    }}\r\n                  >\r\n                    <span onClick={addRetro} style={{ color: \"white\", textTransform: \"upperCase\", cursor: \"pointer\" }}>\r\n                      Create\r\n                    </span>\r\n                  </span>\r\n                }\r\n                labelPosition=\"right\"\r\n                fluid\r\n              ></Input>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ paddingLeft: \"20px\", paddingTop: \"0px\", color: \"grey\" }}>\r\n            {\r\n              <span>\r\n                <div>{\"* not allowed characters: / and ?\"}</div>\r\n                <div>{\"* maximum character length: 20\"}</div>\r\n              </span>\r\n            }\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n        <Divider></Divider>\r\n        <Grid>\r\n          <Grid.Row columns=\"2\">\r\n            <Grid.Column width=\"13\">\r\n              <h2>Currently available retros</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width=\"3\" floated=\"right\">\r\n              <Loader inline active={isWaitingForResponse}></Loader>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Grid>\r\n          <Grid.Row columns={3}>\r\n            {retros.map((retro) => {\r\n              return (\r\n                <Grid.Column style={{ padding: \"10px 14px 0px 0px\" }}>\r\n                  <Popup\r\n                    mouseEnterDelay={1000}\r\n                    trigger={\r\n                      <div>\r\n                        <Card key={retro._id} onClick={() => history.push(`/retro?_id=${retro._id}`)}>\r\n                          <Card.Content\r\n                            textAlign=\"center\"\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              alignContent: \"center\",\r\n                              textTransform: \"uppercase\",\r\n                              flexDirection: \"column\",\r\n                              padding: \"2px\",\r\n                              height: \"50px\",\r\n                              overflow: \"hidden\",\r\n                            }}\r\n                          >\r\n                            <Label icon=\"trash\" size=\"mini\" corner=\"right\" color=\"red\" onClick={(event) => deleteRetro(event, retro._id)}></Label>\r\n                            <React.Fragment>{util.truncate(retro._id, 23)}</React.Fragment>\r\n                          </Card.Content>\r\n                        </Card>\r\n                      </div>\r\n                    }\r\n                    content={retro._id}\r\n                  ></Popup>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","const setRetros = (retros) => {\r\n  return {\r\n    type: \"SET_RETROS\",\r\n    payload: retros,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setRetros,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Container, Button, Grid, Placeholder, Card, Popup } from \"semantic-ui-react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport actions from \"../actions\";\r\nimport util from \"./utils\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction LoginPage() {\r\n  let history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let retros = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetchRetros();\r\n  }, []);\r\n\r\n  const fetchRetros = async () => {\r\n    setIsLoading(true);\r\n    const response = await api.getRetros();\r\n    if (!response) {\r\n      toast(\"Could not read retros from server. Something is wrong!\", { type: \"error\" });\r\n    } else {\r\n      dispatch(actions.setRetros(response));\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        style={{\r\n          width: \"500px\",\r\n          margin: \"15px\",\r\n          padding: \"15px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          style={{\r\n            background: \"#7761F1\",\r\n            color: \"white\",\r\n            border: \"7px solid #7761F1\",\r\n            borderRadius: \"0px 0px 50px 50px\",\r\n            paddingBottom: \"30px\",\r\n          }}\r\n        >\r\n          <Grid.Column floated=\"left\" width={8}>\r\n            <h1 style={{ textTransform: \"uppercase\" }}>Retro app</h1>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n            <Button size=\"small\" circular color=\"teal\" onClick={() => history.push(\"/admin\")}>\r\n              Retro management{\" \"}\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        {isLoading ? (\r\n          <Placeholder style={{ marginTop: \"50px\" }}>\r\n            {[...Array(8)].map((e, i) => (\r\n              <Placeholder.Line />\r\n            ))}\r\n          </Placeholder>\r\n        ) : (\r\n          <Grid>\r\n            <Grid.Row style={{ margin: \"5px\" }}>\r\n              <h3>All open retros to join:</h3>\r\n            </Grid.Row>\r\n            <Grid.Row columns={3}>\r\n              <Router>\r\n                {retros.map((retro) => {\r\n                  return (\r\n                    <Grid.Column style={{ padding: \"10px 14px 0px 0px\" }}>\r\n                      <Popup\r\n                        mouseEnterDelay={1000}\r\n                        trigger={\r\n                          <Card key={retro._id} onClick={() => history.push(`/retro?_id=${retro._id}`)}>\r\n                            <Card.Content\r\n                              textAlign=\"center\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignContent: \"center\",\r\n                                textTransform: \"uppercase\",\r\n                                flexDirection: \"column\",\r\n                                padding: \"2px\",\r\n                                height: \"50px\",\r\n                                overflow: \"hidden\",\r\n                              }}\r\n                            >\r\n                              {util.truncate(retro._id, 23)}\r\n                            </Card.Content>\r\n                          </Card>\r\n                        }\r\n                        content={retro._id}\r\n                      ></Popup>\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n              </Router>\r\n            </Grid.Row>\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n      <Footer>{\"click a retro to join...\"}</Footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Retro from \"./Components/Retro\";\nimport Admin from \"./Components/Admin\";\nimport LoginPage from \"./Components/LoginPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport api from \"./api\";\nimport actions from \"./actions\";\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    api.startRealTimeUpdate(updateRetros);\n  }, []);\n\n  const updateRetros = (retros) => {\n    dispatch(actions.setRetros(retros));\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/retro\">\n            <Retro />\n          </Route>\n          <Route path=\"/admin\">{authenticated ? <Admin /> : <LoginPage />}</Route>\n        </Switch>\n      </Router>\n      <ToastContainer position=\"bottom-center\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const retroReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"SET_RETROS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default retroReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport retroReducer from \"./reducers\";\n\nconst store = createStore(retroReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}